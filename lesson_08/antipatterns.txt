Уже с первых шагов код вызывал неудовлетворение.
Причину многого видел в непонимании конечной цели проекта, соответственно путей реализации.
После лекции, честно говоря, увидел те ошибки, которые раньше не замечал, и  добавилось
более структурированное понимание того, почему код не удовлетворяет.

По пунктам меню.
1) LASAGNA CODE присутствует. Может быть, не в общепринятом понимании слоев как разделения
   по бизнес-логике, а попытка разделить сущности на отдельные модули. На начальном этапе
   разделение на модули облегчает понимание картины. При дальнейшем увеличении их числа
   и необходимости обеспечить взаимосвязь между ними общая картина запутывается. Приходится
   вносить изменения во многих местах.
   Эту проблему можно отнести и к попытке преждевременной оптимизации.
   Часто замечал, что сразу пытаюсь писать максимально красивый код. В дальнейшем дополнительные
   данные заставляют вносить изменения и старая версия уже не устраивает. "Красоту" ломать не хочется,
   начинаешь прикручивать новые ненужные модули или кривые решения, чтобы не переписывать старое.

2) Присутствуют и INPUT KLUDGE, BLIND FAITH в равной мере. Где-то во view отчутствует проверка
   пользовательского ввода, где-то она есть, но явно недостаточна. В частности в логгере задаю
   директорию для сохранения, не озаботившись проверкой ее существования. В моем случае это не
   совсем вера, скорее небрежность. При написании знал, что нужно реализовать проверку или
   ужесточить ее, но не делал из экономии времени, понимая, что ошибка в рамках учебного проекта
   не фатальна.

3) Как следствие вышеперечисленных проблем LAVA FLOW. Знал, что какие-то части кода нужно
   исправить, написать лучше, оставлял на потом. При следующем задании это включалось в дальнейший
   код, и чтобы исправить, пришлось бы переписываь уже больший объем и старого и вновь написанного
   кода.

4) Наличие явного COPY PAST. Особенно это бросается в глаза в мапперах. Когда только начинал
   писать, очень не хотелось дублировать код и написать универсальный маппер. Но не смог
   решить проблему с зацикливанием.

5) Квадратное колесо особо выделять не стоит. С первого занятия слово фреймворк взял в кавычки.

6) Получился, если и не большой, но комок грязи.

7) Особенно меня удручает реализация мапперов. Возможно, такое безобрзие получается из-за
   излишнего применения других паттернов по условию курса, что утяжеляет код, возможно, я
   не смог найти в этой каше оптимальное решение.